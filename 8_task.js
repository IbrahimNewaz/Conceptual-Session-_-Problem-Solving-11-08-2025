/*
Problem-05: Let‚Äôs Calculate Total Sleep Time

Function Name Must be calculateSleepTime()
‡¶∞‡¶æ‡¶ï‡¶ø ‡¶ï‡¶ø ‡¶¨ ‡¶Ö‡¶´‡¶ø ‡¶´‡¶ø ‡¶∏‡ßá ‡¶∏‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶§‡ßá ‡¶§‡ßá ‡¶ï‡¶∞‡¶§‡ßá ‡¶§‡ßá ‡¶ò‡ßÅ‡¶Æ‡¶ø ‡¶Æ‡¶ø ‡ßü‡ßá ‡ßü‡ßá ‡¶Ø‡¶æ‡ßü‡•§
‡¶Ø‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶®‡ßá ‡¶®‡ßá ‡¶∏‡ßá ‡¶∏‡ßá ‡¶∏‡¶ï‡¶≤ ‡¶ï‡¶æ‡¶ú ‡¶∏‡¶†‡¶ø ‡¶†‡¶ø ‡¶ï ‡¶∏‡¶Æ‡ßü ‡¶∂‡ßá ‡¶∂‡ßá ‡¶∑ ‡¶ï‡¶∞‡¶§‡ßá ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá ‡¶∞‡ßá ‡¶®‡¶æ ‡•§
‡¶§‡¶æ‡¶∞ ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶æ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶Ø‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶Æ‡ßá office ‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶®‡¶®‡ßã‡¶∞ ‡¶ü‡¶ü‡ßã‡¶ü‡¶æ‡¶≤ ‡¶∏‡¶Æ‡ßü ‡¶ü‡¶æ ‡¶§‡¶ø ‡¶§‡¶ø ‡¶®‡¶ø ‡¶®‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá ‡¶≤‡ßá ‡¶ü ‡¶ï‡¶∞‡ßá ‡¶∞‡ßá ‡¶¶‡ßá ‡¶¶‡ßá ‡¶ñ‡¶§‡ßá ‡¶§‡ßá ‡¶ö‡¶æ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßá ‡¶∏‡ßá ‡¶á ‡¶∏‡¶Æ‡ßü ‡¶ü‡ßÅ‡¶ï‡ßÅ ‡¶¨‡¶æ‡¶∏‡¶æ‡ßü ‡¶è‡¶∏‡ßá ‡¶∏‡ßá ‡¶Ö‡¶´‡¶ø ‡¶´‡¶ø ‡¶∏‡ßá ‡¶∏‡ßá ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶§‡ßá ‡¶§‡ßá ‡¶ö‡¶æ‡¶®‡•§
‡¶§‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶ö‡ßç‡¶õ‡ßá calculateSleepTime() ‡¶®‡¶æ‡¶Æ‡ßá ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ü‡¶ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶§‡ßà ‡¶§‡ßà ‡¶∞‡¶ø ‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ,
‡¶Ø‡¶æ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ü‡¶ø Array ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶π‡¶ø ‡¶π‡¶ø ‡¶∏‡ßá ‡¶∏‡ßá ‡¶¨‡ßá ‡¶¨‡ßá ‡¶®‡ßá ‡¶®‡ßá ‡¶¨‡ßá ‡¶¨‡ßá ‡•§ Array ‡¶§‡ßá ‡¶§‡ßá ‡¶∞‡¶æ‡¶ï‡¶ø ‡¶ï‡¶ø ‡¶¨‡ßá ‡¶¨‡ßá ‡¶∞ ‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶®‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡ßü (seconds) ‡¶ó‡ßÅ‡¶≤‡¶≤‡ßã ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶∞‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶¨‡ßá ‡•§ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶ü‡¶ø Array ‡¶•‡ßá ‡¶•‡ßá ‡¶ï‡ßá ‡¶ï‡ßá ‡¶Æ‡¶Æ‡ßã‡¶ü ‡¶∏‡¶Æ‡ßü ‡¶¨‡ßá ‡¶¨‡ßá ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∞‡ßá ‡¶∏‡ßá ‡¶∏‡ßá ‡¶ü‡¶ø ‡¶ü‡¶ø ‡¶ï‡ßá ‡¶ï‡ßá ‡¶ò‡¶£‡ßç‡¶ü‡¶æ, ‡¶Æ‡¶ø ‡¶Æ‡¶ø ‡¶®‡¶ø ‡¶®‡¶ø ‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßá ‡¶∏‡ßá ‡¶ï‡ßá ‡¶ï‡ßá ‡¶®‡ßç‡¶°‡ßá ‡¶®‡ßç‡¶°‡ßá ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ü‡¶ø ‡¶Ö‡¶¨‡¶ú‡ßá ‡¶ú‡ßá ‡¶ï‡ßç‡¶ü ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶∞‡ßá ‡¶∞‡¶ø ‡¶∞‡¶ø ‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶¨‡ßá ‡¶¨‡ßá ‡•§

üü© Input:
- Function ‡¶ü‡¶ø ‡¶ü‡¶ø input ‡¶®‡ßá ‡¶®‡ßá ‡¶¨‡ßá ‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ü‡¶ø array
- array ‡¶è‡¶∞ element ‡¶ó‡ßÅ‡¶≤‡¶≤‡ßã ‡¶π‡¶¨‡ßá ‡¶¨‡ßá number (watch times in second)
üü¶Output:

- ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ü‡¶ø ‡¶ü‡¶ø Array ‡¶§‡ßá ‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡¶≤‡ßã ‡¶∏‡¶Æ‡ßü ‡¶ï‡ßá ‡¶ï‡ßá calculate ‡¶ï‡¶∞‡ßá ‡¶∞‡ßá ‡¶∏‡ßá ‡¶∏‡ßá ‡¶ü‡¶æ ‡¶ï‡ßá ‡¶ï‡ßá ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Æ‡¶ø ‡¶Æ‡¶ø ‡¶®‡¶ø ‡¶®‡¶ø ‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßá ‡¶∏‡ßá ‡¶ï‡ßá ‡¶ï‡ßá ‡¶®‡ßç‡¶° ‡¶è ‡¶ï‡¶®‡¶≠‡¶æ‡¶∞‡ßç‡¶ü ‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá ‡¶¨‡ßá ‡•§
- ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ü‡¶ø ‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶æ ‡¶Ö‡¶¨‡¶ú‡ßá ‡¶ú‡ßá ‡¶ï‡ßç‡¶ü ‡¶∞‡¶ø ‡¶∞‡¶ø ‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶¨‡ßá ‡¶¨‡ßá ‡•§ ‡¶Ö‡¶¨‡¶ú‡ßá ‡¶ú‡ßá ‡¶ï‡ßç‡¶ü ‡¶ü‡¶ø ‡¶ü‡¶ø ‡¶¶‡ßá ‡¶¶‡ßá ‡¶ñ‡¶§‡ßá ‡¶§‡ßá ‡¶π‡¶¨‡ßá ‡¶¨‡ßá ‡¶è‡¶á ‡¶∞‡¶ï‡¶Æ-
{ hour:14 , minute: 46 , second: 3 }

üü•Challenge: 
Array element ‡¶ó‡ßÅ‡¶≤‡¶≤‡ßã ‡¶Ø‡¶¶‡¶ø ‡¶¶‡¶ø number ‡¶®‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶≤‡ßá "Invalid" return ‡¶ï‡¶∞‡¶¨‡ßá ‡¶¨‡ßá ‡•§

SAMPLE INPUT                                                            SAMPLE OUTPUT
[1000, 499, 519, 300]                                       { hour: 0, minute: 38, second: 38 }
[1000, 2000, 725]                                           { hour: 1, minute: 2, second: 5 }
[100, 3800]                                                 { hour: 1, minute: 5, second: 0 }
[]                                                          { hour: 0, minute: 0, second: 0 }
[5600]                                                      { hour: 1, minute: 33, second: 20 }

[100, 3800, "90" ]                                                      "Invalid"
*/

function calculateSleepTime(counting) {

    let totaltime = 0;
    for (let i = 0; i < counting.length; i++) {
        if (typeof counting[i] !== "number") {
            return "Invalid";
        }
        else {
            totaltime = totaltime + counting[i];
        }
    }

    let sleepSecond = totaltime;

    let hour = Math.floor(sleepSecond / 3600); // 3600 sec for 1 hour //
    let remaingSecound = sleepSecond % 3600;
    let minute = Math.floor(remaingSecound / 60); // 60 sec for 1 min //
    let second = remaingSecound % 60;

    const TimeCounting =
    {
        hour: hour,
        minute: minute,
        second: second
    };
    return TimeCounting;
}

// main function //
const sleepTime = [1000, 2000, 725];
const finalResult = calculateSleepTime(sleepTime);
console.log(finalResult);